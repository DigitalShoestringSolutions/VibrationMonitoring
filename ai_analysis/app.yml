version: '2'

services:
    api_service:
        build:
            context: .
            target: api
        user: $CURRENT_UID
        ports:
            - '8000:8000'
        volumes:
            - ./:/app
            - ./data:/app/data
        working_dir: /app
        command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
        environment:
            - PYTHONPATH=/app
            - INFLUXDB_URL=http://timeseries-db.docker.local:8086
            - INFLUXDB_TOKEN=${DB_ADMIN_INITIAL_TOKEN}
            - INFLUXDB_ORG=${DB_ORG}
            - INFLUXDB_BUCKET=${DB_BUCKET}
            - INFLUXDB_MEASUREMENT=${INFLUXDB_MEASUREMENT}
        networks:
            internal:
                aliases:
                    - ml-service.docker.local
        depends_on:
            - "timeseries-db"
            - redis
        
        logging:
            driver: syslog
            options:
                tag: docker-ml-service
    ml_worker:
        build:
            context: .
            target: worker
        user: $CURRENT_UID
        volumes:
            - ./:/app
            - ./data:/app/data
        working_dir: /app
        command: celery -A app.tasks worker --loglevel=info
        environment:
            - PYTHONPATH=/app
            - CELERY_BROKER_URL=redis://redis:6379/0
            - INFLUXDB_URL=http://timeseries-db.docker.local:8086
            - INFLUXDB_TOKEN=${DB_ADMIN_INITIAL_TOKEN}
            - INFLUXDB_ORG=${DB_ORG}
            - INFLUXDB_BUCKET=${DB_BUCKET}
            - INFLUXDB_MEASUREMENT=${INFLUXDB_MEASUREMENT}
        networks:
            internal:
                aliases:
                    - ml-worker.docker.local
        depends_on:
            - redis
            - "timeseries-db"
        logging:
            driver: syslog
            options:
                tag: docker-ml-worker

    redis:
      image: redis:alpine
      container_name: redis
      ports:
        - "6379:6379"
